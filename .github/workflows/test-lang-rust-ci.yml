concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
defaults:
  run:
    working-directory: lang/rust
env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: git
  RUSTFLAGS: -Dwarnings
jobs:
  ci:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Cache Cargo
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-target-cache1-${{ hashFiles('**/Cargo.lock') }}
        path: ~/.cargo
    - continue-on-error: true
      name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-target-cache1-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock')
          }}
        path: lang/rust/target
    - continue-on-error: true
      name: Rust Toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt
        targets: ${{ matrix.target }}
        toolchain: ${{ matrix.rust }}
    - continue-on-error: true
      if: matrix.rust == 'stable' && matrix.target == 'x86_64-unknown-linux-gnu'
      name: Cache cargo-rdme
      uses: actions/cache@v4
      with:
        key: cargo-rdme-
        path: ~/.cargo-${{ matrix.rust }}/cargo-rdme
    - continue-on-error: true
      if: matrix.rust == 'stable' && matrix.target == 'x86_64-unknown-linux-gnu'
      name: Run cargo-rdme
      run: 'cargo install --root ~/.cargo-${{ matrix.rust }}/cargo-rdme --locked cargo-rdme

        export PATH=$PATH:~/.cargo-${{ matrix.rust }}/cargo-rdme/bin

        cargo rdme --check

        '
    - continue-on-error: true
      if: matrix.target != 'wasm32-unknown-unknown'
      name: Rust Format
      run: cargo fmt --all -- --check
    - continue-on-error: true
      name: Rust Build
      run: cargo build --all-features --all-targets
    - continue-on-error: true
      if: matrix.target != 'wasm32-unknown-unknown'
      name: Rust Test
      run: cargo test --all-features --target ${{ matrix.target }}
    - continue-on-error: true
      if: matrix.target != 'wasm32-unknown-unknown'
      name: Rust Test AVRO-3549
      run: cargo test --target ${{ matrix.target }} test_avro_3549_read_not_enabled_codec
    - continue-on-error: true
      if: matrix.target != 'wasm32-unknown-unknown'
      name: Rust Test docs
      run: cargo test --doc
    strategy:
      matrix:
        rust:
        - stable
        - beta
        - nightly
        - 1.70.0
        target:
        - x86_64-unknown-linux-gnu
        - wasm32-unknown-unknown
  interop:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Rust Toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: stable
    - continue-on-error: true
      name: Cache Cargo
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-target-cache1-${{ hashFiles('**/Cargo.lock') }}
        path: ~/.cargo
    - continue-on-error: true
      name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-target-cache1-stable-${{ hashFiles('**/Cargo.lock')
          }}
        path: lang/rust/target
    - continue-on-error: true
      name: Cache Local Maven Repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Setup Temurin JDK 8, 11, 17 & 21
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: temurin
        java-version: '8

          11

          17

          21

          '
    - continue-on-error: true
      name: Setup Maven 3.9.6
      uses: stCarolas/setup-maven@d6af6abeda15e98926a57b5aa970a96bb37f97d1
      with:
        maven-version: 3.9.6
    - continue-on-error: true
      name: Install Java Avro for Interop Test
      run: mvn -B install -PskipQuality
      working-directory: .
    - continue-on-error: true
      name: Create Interop Data Directory
      run: mkdir -p build/interop/data
      working-directory: .
    - continue-on-error: true
      name: Generate Interop Resources
      run: mvn -B -P interop-data-generate generate-resources
      working-directory: lang/java/avro
    - continue-on-error: true
      name: Generate interop data
      run: ./build.sh interop-data-generate
    - continue-on-error: true
      name: Rust reads interop files created by Java and Rust
      run: ./build.sh interop-data-test
    - continue-on-error: true
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: 5.32
    - continue-on-error: true
      name: Install Dependencies
      run: "sudo apt-get -qqy install --no-install-recommends libcompress-raw-zlib-perl\
        \ \\\n                                                  libcpan-uploader-perl\
        \ \\\n                                                  libencode-perl \\\n\
        \                                                  libio-string-perl \\\n\
        \                                                  libjansson-dev \\\n   \
        \                                               libjson-xs-perl \\\n     \
        \                                             libmodule-install-perl \\\n\
        \                                                  libmodule-install-readmefrompod-perl\
        \ \\\n                                                  libobject-tiny-perl\
        \ \\\n                                                  libsnappy-dev \\\n\
        \                                                  libtest-exception-perl\
        \ \\\n                                                  libtest-pod-perl\n\
        cpanm --mirror https://www.cpan.org/ install Compress::Zstd \\\n         \
        \                                    Error::Simple \\\n                  \
        \                           Module::Install::Repository \\\n             \
        \                                Object::Tiny \\\n                       \
        \                      Regexp::Common \\\n                               \
        \              Try::Tiny \\\n                                            \
        \ inc::Module::Install\n"
    - continue-on-error: true
      name: Perl reads interop files created by Java and Rust
      run: ./build.sh interop-data-test
      working-directory: lang/perl
  web-assembly:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Rust Toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        targets: wasm32-unknown-unknown
        toolchain: stable
    - continue-on-error: true
      name: Cache Cargo
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-target-cache1-${{ hashFiles('**/Cargo.lock') }}
        path: ~/.cargo
    - continue-on-error: true
      name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-target-cache1-stable-${{ hashFiles('**/Cargo.lock')
          }}
        path: lang/rust/target
    - continue-on-error: true
      name: Install wasm-pack
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    - continue-on-error: true
      name: Build the Web Assembly demo app
      run: wasm-pack build wasm-demo
    - continue-on-error: true
      name: Test the Web Assembly demo app
      run: RUST_BACKTRACE=1 wasm-pack test --headless --firefox wasm-demo
name: Rust Continuous Integration
on:
  repository_dispatch:
    types: trigger-ga___test-lang-rust-ci.yml
permissions:
  contents: read
